<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using System;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using RobustHaven.IntegrationTests.Attributes;
using RobustHaven.IntegrationTests.SeleniumExtensions.Core;

namespace <#= Model.Namespace #>.Core
{
	public abstract class FeatureTestBase
	{
		protected WebTestVisitor Visitor;
		protected Log Logger;

		[SetUp]
		public virtual void Setup()
		{
			var feature = (FeatureAttribute)Attribute.GetCustomAttribute(GetType(), typeof(FeatureAttribute));
			var categories = ((CategoryAttribute[])Attribute.GetCustomAttributes(GetType(), typeof(CategoryAttribute))).Select(x => x.Name).ToList();
			var name = TestContext.CurrentContext.Test.Name;
			var index = name.IndexOf('(');
			if (index != -1)
			{
				name = name.Substring(0, index);
			}
			var scenario = GetType()
				.GetMethod(name)
				.GetCustomAttributes(true)
				.OfType<ScenarioAttribute>()
				.Single();

			Logger = new Log();
			
			var browser = new FirefoxDriver();
			//var browsers = new IWebDriver[]
			//{
			//	new AndroidDriver(),
			//	new ChromeDriver(),
			//	new EventFiringWebDriver(),
			//	new FirefoxDriver(),
			//	new InternetExplorerDriver(),
			//	new PhantomJSDriver(),
			//	new RemoteWebDriver(new Uri(), new DesiredCapabilities()),
			//	new SafariDriver(), 
			//};


			Visitor = new WebTestVisitor(new MyWebTestContext("http://localhost:54646") { Browser = browser, Logger = Logger });

			Logger.Info("***** Test: {0}:{1}", name, scenario.Name);


			var i = 0;
			foreach (var category in categories)
			{
				if (i++ > 0)
				{
					Visitor.Context.Logger.GherkinAppend(" ");
				}
				Visitor.Context.Logger.GherkinAppend("@{0}", category);
			}

			Visitor.Context.Logger.Gherkin("", "");
			Visitor.Context.Logger.Gherkin("", "Feature:\t{0}", feature.Name);

			Visitor.Context.Logger.Gherkin("", "Background:", "");

			Background();

			Visitor.Context.Logger.Gherkin("", "");
			Visitor.Context.Scenario("Scenario:\t{0}", scenario.Name);
		}
		
		public virtual void Background()
		{
		}


		[TearDown]
		public virtual void TearDown()
		{
			Visitor.Context.Browser.Close();

			try
			{
				Visitor.Context.Browser.SwitchTo().Alert().Accept();
			}
			catch (NoAlertPresentException)
			{
				// That's fine.
			}
			catch (WebDriverException)
			{
				// no confirm dialog
			}

			if (TestContext.CurrentContext.Result.Status == TestStatus.Passed)
			{
				Assert.Pass(Logger.GherkinLog);
			}
		}
	}
}